<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->
<!--
  NOTE: SailPointObjectCache.hbm.xml has identical properties but different
  indexes.  If you change this you probably need to change the other.

  The maximum size of a VARCHAR on various sysems is:
     Oracle - 4000
     SQLServer - 8000
     MySQL 4 - 255
     MySQL 5 - 65K
     DB2 8.1 - 32K

   Since we don't need to support MySQL 4, 2000 is a good number
   for strings where need some headroom but don't want them to 
   overflow into a blob.

   Well, its worse.  If you try to map a string of more than 255,
   Hibernate will render that as "text" in MySQL even if we're using 
   the 5.0 dialect.  This then makes impossible to index.

-->

<!--
    <id name="id" length="128">
      <generator class="uuid.hex"/>
    </id>
-->

	<id name="id" length="32">
		<generator class="sailpoint.persistence.IdGenerator">
          <param name="uuid_gen_strategy_class">org.hibernate.id.uuid.CustomVersionOneStrategy</param>
        </generator>
	</id>

    <!-- jsl - was experimenting with this but couldn't get past as hoard
         of StaleObjectStateExceptions in the Certification tests.  
         Don't need it right now, but may eventually.  Revisit later.
    <version name="version" unsaved-value="negative"/>
    -->

    <property name="created" type="sailpoint.persistence.DateType"/>
    <property name="modified" type="sailpoint.persistence.DateType"/>
    <!--
    <property name="lock" column="iiqlock" type="string" length="128"/>
    -->

    <many-to-one embed-xml="false" name="owner" class="sailpoint.object.Identity"/>
    <many-to-one embed-xml="false" name="assignedScope" class="sailpoint.object.Scope" />

    <!-- See note in Scope.hbm.xml about why this has a length of 450. -->
    <property name="assignedScopePath" type="string" length="450"/>
    
