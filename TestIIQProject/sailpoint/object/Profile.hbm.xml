<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" [
  <!ENTITY SailPointObject SYSTEM "classpath://sailpoint/object/SailPointObject.hbm.xml">
]>

<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<hibernate-mapping>
  <class name="sailpoint.object.Profile">

    &SailPointObject;
    <property name="name" type="string" length="128"/>
    <property name="description" type="string" length="1024"/>

    <many-to-one embed-xml="false" name="bundle" column="bundleId" class="sailpoint.object.Bundle"/>

    <property name="disabled" type="boolean"/>
    <property name="accountType" type="string" length="128"/>

    <many-to-one embed-xml="false" name="application" class="sailpoint.object.Application"/>

    <property name="attributes" type="sailpoint.persistence.XmlType" length="100000000"/>

    <list name="constraints" table="ProfileConstraints">
      <key column="profile"/>
      <list-index column="idx"/>
      <element type="sailpoint.persistence.FilterType" length="100000000"/>
    </list>

    <!-- Using composite-element here, but the main limitation is that
         the elements may not contain collections.  When these are in Sets
         you must also be sure they implement equals() and hashCode() correctly.
     -->
    <list name="permissions" table="ProfilePermissions">
      <key column="profile"/>
      <list-index column="idx"/>
      <composite-element class="sailpoint.object.Permission">
        <property name="target"/>
        <property name="rights" length="4000"/>
        <property name="attributes" type="sailpoint.persistence.XmlType" length="100000000"/>
      </composite-element>
    </list>

   </class>
</hibernate-mapping>
