<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" [
  <!ENTITY SailPointObject SYSTEM "classpath://sailpoint/object/SailPointObject.hbm.xml">
]>

<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<hibernate-mapping>
  <class name="sailpoint.object.Certification"
         dynamic-update="true" dynamic-insert="true">  

    &SailPointObject;

     <property name="attributes" type="sailpoint.persistence.XmlType"
              length="100000000"/>

    <property name="lock" column="iiqlock" type="string" length="128"/>

    <!-- these may have names, but they are not unique keys -->
    <!-- If you change the length, also change Certification.NAME_MAX_LENGTH. -->
    <property name="name" type="string" length="256" index="spt_certification_name_ci"/>

    <!-- If you change the length, also change Certification.SHORT_NAME_MAX_LENGTH. -->
    <property name="shortName" type="string" length="255" index="spt_cert_short_name_ci"/>

    <property name="description" type="string" length="1024"/>

    <property name="creator"/>

    <list name="certifiers" cascade="all" table="Certifiers">
      <key column="certification_id"/>
      <list-index column="idx"/>
      <element type="string" column="certifier"/>
    </list>

    <property name="complete" type="boolean"/>
    <property name="completeHierarchy" type="boolean"/>
    <property name="signed" type="sailpoint.persistence.DateType" index="spt_certification_signed"/>
    <property name="approverRule" type="sailpoint.persistence.ReferenceType" length="512" />

    <list name="signOffHistory" cascade="all">
      <key column="certification_id"/>
      <list-index column="idx"/>
      <one-to-many class="sailpoint.object.SignOffHistory"/>
    </list>

    <property name="finished" type="sailpoint.persistence.DateType" index="spt_certification_finished"/>
    <property name="expiration" type="sailpoint.persistence.DateType"/>
    <property name="automaticClosingDate" type="sailpoint.persistence.DateType" index="spt_cert_auto_close_date"/>
    <property name="applicationId" index="spt_cert_application_ci" />
    <property name="manager" index="spt_cert_manager_ci" />
    <property name="groupDefinition" type="sailpoint.persistence.ReferenceType" length="512" />
    <property name="groupDefinitionId" index="spt_cert_group_id_ci" length="128"/>
    <property name="groupDefinitionName" index="spt_cert_group_name_ci" />

    <property name="comments" type="materialized_clob" length="8192"/>
    <property name="error" type="materialized_clob" length="8192"/>
    <property name="entitiesToRefresh" type="sailpoint.persistence.XmlType" length="100000000"/>
    <property name="commands" type="sailpoint.persistence.XmlType" length="100000000"/>
    
    <property name="activated" type="sailpoint.persistence.DateType" />

    <component name="statistics" >
        <property name="totalEntities"/>
        <property name="excludedEntities"/>
        <property name="completedEntities"/>
        <property name="delegatedEntities"/>
        <property name="percentComplete" index="spt_cert_percent_complete"/>

        <property name="certifiedEntities" />
        <property name="certificationRequiredEntities" column="cert_req_entities"/>
        <property name="overdueEntities" />
        <property name="totalItems"/>
        <property name="excludedItems"/>
        <property name="completedItems"/>
        <property name="delegatedItems"/>
        <property name="itemPercentComplete"/>

        <property name="certifiedItems" />
        <property name="certificationRequiredItems" column="cert_req_items"/>
        <property name="overdueItems" />

        <property name="remediationsKickedOff"/>
        <property name="remediationsCompleted"/>
        <property name="totalViolations" not-null="true" />
        <property name="violationsAllowed" not-null="true" />
        <property name="violationsRemediated" not-null="true" />
        <property name="violationsAcknowledged" not-null="true" />

        <property name="totalRoles" not-null="true" />
        <property name="rolesApproved" not-null="true" />
        <property name="rolesAllowed" not-null="true" />
        <property name="rolesRemediated" not-null="true" />

        <property name="totalExceptions" not-null="true" />
        <property name="exceptionsApproved" not-null="true" />
        <property name="exceptionsAllowed" not-null="true" />
        <property name="exceptionsRemediated" not-null="true" />

        <property name="totalAccountGroupPermissions" column="total_grp_perms" not-null="true" />
        <property name="accountGroupPermissionsApproved" column="grp_perms_approved" not-null="true" />
        <property name="accountGroupPermissionsRemediated" column="grp_perms_remediated" not-null="true" />

        <property name="totalAccountGroupMemberships" column="total_grp_memberships" not-null="true" />
        <property name="accountGroupMembershipsApproved" column="grp_memberships_approved" not-null="true" />
        <property name="accountGroupMembershipsRemediated" column="grp_memberships_remediated" not-null="true" />

        <property name="totalAccounts" not-null="true" />
        <property name="accountsApproved" not-null="true" />
        <property name="accountsAllowed" not-null="true" />
        <property name="accountsRemediated" not-null="true" />

        <property name="totalProfiles" not-null="true" />
        <property name="profilesApproved" not-null="true" />
        <property name="profilesRemediated" not-null="true" />

        <property name="totalScopes" not-null="true" />
        <property name="scopesApproved" not-null="true" />
        <property name="scopesRemediated" not-null="true" />

        <property name="totalCapabilities" not-null="true" />
        <property name="capabilitiesApproved" not-null="true" />
        <property name="capabilitiesRemediated" not-null="true" />

        <property name="totalPermits" not-null="true" />
        <property name="permitsApproved" not-null="true" />
        <property name="permitsRemediated" not-null="true" />

        <property name="totalRequirements" not-null="true" />
        <property name="requirementsApproved" not-null="true" />
        <property name="requirementsRemediated" not-null="true" />

        <property name="totalRoleHierarchies" column="total_hierarchies" not-null="true" />
        <property name="roleHierarchiesApproved" column="hierarchies_approved" not-null="true" />
        <property name="roleHierarchiesRemediated" column="hierarchies_remediated" not-null="true" />
    </component>

    
    <bag name="archivedEntities" inverse="true" mutable="false" lazy="extra" cascade="none">
      <key column="certification_id"/>
      <one-to-many class="sailpoint.object.ArchivedCertificationEntity"/>
    </bag>
    

    <property name="type" index="spt_cert_type_ci">
      <type name="sailpoint.persistence.EnumType">
        <param name="enumClassName">sailpoint.object.Certification$Type</param>
      </type>
    </property>

    <property name="taskScheduleId" type="string" length="255" index="spt_cert_task_sched_id_ci" />
    <property name="triggerId" type="string" length="128" index="spt_cert_trigger_id_ci" />
    <property name="certificationDefinitionId" type="string" length="128" index="spt_cert_cert_def_id_ci" />

    <property name="phase" index="spt_cert_phase_ci">
      <type name="sailpoint.persistence.EnumType">
        <param name="enumClassName">sailpoint.object.Certification$Phase</param>
      </type>
    </property>
    <property name="nextPhaseTransition" type="sailpoint.persistence.DateType" index="spt_cert_nxt_phs_tran"/>

    <property name="phaseConfig" type="sailpoint.persistence.XmlType" length="100000000" />

    <property name="processRevokesImmediately" type="boolean" />

    <property name="nextRemediationScan" type="sailpoint.persistence.DateType" index="spt_cert_nextRemediationScan"/>

    <property name="entitlementGranularity">
      <type name="sailpoint.persistence.EnumType">
        <param name="enumClassName">sailpoint.object.Certification$EntitlementGranularity</param>
      </type>
    </property>

    <property name="bulkReassignment" type="boolean" />

    <property name="continuous" type="boolean" />
    <property name="continuousConfig" type="sailpoint.persistence.XmlType" length="100000000" />
    <property name="nextCertificationRequiredScan" type="sailpoint.persistence.DateType" column="next_cert_required_scan" index="nxt_cert_req_scan" />
    <property name="nextOverdueScan" type="sailpoint.persistence.DateType" index="nxt_overdue_scan" />

    <property name="excludeInactive" type="boolean" index="spt_cert_exclude_inactive" />

    <bag name="entities" cascade="all">
      <key column="certification_id"/>
      <one-to-many class="sailpoint.object.CertificationEntity"/>
    </bag>

    <list name="hibernateCertifications" cascade="all">
      <key column="parent"/>
      <list-index column="idx"/>
      <one-to-many class="sailpoint.object.Certification"/>
    </list>

    <many-to-one embed-xml="false" name="parent" class="sailpoint.object.Certification"/>

    <!-- WorkItems are managed independently, so don't cascade persist/delete/etc... -->
    <list name="workItems">
      <key column="certification_ref_id" />
      <list-index column="idx" />
      <one-to-many class="sailpoint.object.WorkItem" />
    </list>

    <list name="tags" cascade="persist,merge,save-update">
      <key column="certification_id"/>
      <list-index column="idx"/>
      <many-to-many class="sailpoint.object.Tag"/>
    </list>

    <list name="certificationGroups" table="certification_groups">
      <key column="certification_id"/>
      <list-index column="idx"/>
      <many-to-many class="sailpoint.object.CertificationGroup" column="group_id"/>
    </list>

    <property name="immutable" type="boolean"/>
    
    <property name="electronicallySigned" type="boolean" index="spt_cert_electronic_signed"/>
    <property name="selfCertificationReassignment" type="boolean" column="self_cert_reassignment" />

  </class>
</hibernate-mapping>
