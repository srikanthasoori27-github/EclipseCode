<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" [
  <!ENTITY SailPointObject SYSTEM "classpath://sailpoint/object/SailPointObject.hbm.xml">
]>

<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<hibernate-mapping>
  <class name="sailpoint.object.Scope">

    &SailPointObject;

    <property name="name" type="string" length="128" not-null="true" index="scope_name_ci" />
    <property name="displayName" type="string" length="128" index="scope_disp_name_ci" />

    <many-to-one embed-xml="false" name="parent" column="parent_id" class="sailpoint.object.Scope"/>

    <list name="childScopes" cascade="persist,merge,save-update">
      <key column="parent_id"/>
      <list-index column="idx"/>
      <one-to-many class="sailpoint.object.Scope"/>
    </list>

    <property name="manuallyCreated" type="boolean"/>
    <property name="dormant" type="boolean"/>

    <!--
      SQL Server has a maximum size of 450 bytes for an NVARCHAR index, 
      so we'll go with a 450 character string here.  We're doing some
      tricks when calculating the path to make it shorter, but there is 
      still a potential to overflow with a REALLY deep hierarchy
      (over 100 levels deep).
     -->
    <property name="path" type="string" length="450" index="scope_path" />
    
    <!--
      Originally this was "dirty" but in 6.1 that has been taken by SailPointObject
      to use for the transient Hibenreate object dirty flag.  I didn't bother with
      a column rename since we don't store the SailPointObject flag. - jsl
    -->
    <property name="denormalizationPending" column="dirty" type="boolean" index="scope_dirty" />

  </class>
</hibernate-mapping>
