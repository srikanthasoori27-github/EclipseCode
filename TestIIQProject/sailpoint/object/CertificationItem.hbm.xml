<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" [
  <!ENTITY CertificationItemExtensions SYSTEM "classpath://sailpoint/object/CertificationItemExtended.hbm.xml">
]>

<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<hibernate-mapping>
  <union-subclass name="sailpoint.object.CertificationItem"
                  extends="sailpoint.object.AbstractCertificationItem"
                  dynamic-update="true" dynamic-insert="true">  

    <property name="bundle" index="spt_cert_item_bundle"/>

    <property name="type" index="spt_cert_item_type">
      <type name="sailpoint.persistence.EnumType">
        <param name="enumClassName">sailpoint.object.CertificationItem$Type</param>
      </type>
    </property>

    <property name="subType">
        <type name="sailpoint.persistence.EnumType">
            <param name="enumClassName">sailpoint.object.CertificationItem$SubType</param>
        </type>
    </property>
    
    <property name="bundleAssignmentId" type="string" length="128"/>

    <many-to-one embed-xml="false" name="parent"
                 class="sailpoint.object.CertificationEntity"
                 column="certification_entity_id"/>
<!--
jsl - had to do this for import files without ids
                 insert="false"
                 update="false"/>
-->

    <list name="bundleEntitlements" cascade="all">
      <key column="certification_item_id"/>
      <list-index column="idx"/>
      <one-to-many class="sailpoint.object.EntitlementSnapshot"/>
    </list>

    <list name="applicationNames" cascade="all" table="CertItemApplications">
      <key column="certification_item_id"/>
      <list-index column="idx"/>
      <element type="string" column="application_name"/>
    </list>

    <!-- This is a one-to-one mapping that does not require the primary keys -->
    <!-- to be shared between these two object.  We're using JOIN fetching   -->
    <!-- so that this gets loaded in the same query as the item.  This helps -->
    <!-- reduce the number of queries when a user has a lot of additional    -->
    <!-- entitlements.                                                       -->

    <!-- jsl - had to take out unique="true" for SQL Server -->
    <many-to-one embed-xml="false" name="exceptionEntitlements"
                 class="sailpoint.object.EntitlementSnapshot"
                 cascade="all"
                 fetch="join" />

    <!-- Flag to mark items for refresh -->
    <property name="needsRefresh" type="boolean" index="spt_needs_refresh" />

    <!--
      If these lengths change, the MAX_LENGTH_* constants in CertificationItem
      also need to be changed.
     -->
    <!-- Inlined exceptional entitlement attributes used for searching. -->
    <property name="exceptionApplication" type="string" length="128" index="spt_cert_item_exception_app" />
    <property name="exceptionAttributeName" type="string" length="255" />
    <property name="exceptionAttributeValue" type="string" length="2048" />
    <property name="exceptionPermissionTarget" type="string" index="spt_cert_item_perm_target" />
    <property name="exceptionPermissionRight" type="string" index="spt_cert_item_perm_right" />
  

    <!-- Keeping a private copy so we can be independent of Interrogator.
         Do we ever want to search on these?  Could copy them into
         a child list since these won't have unique names.
     -->
    <property name="policyViolation" type="sailpoint.persistence.XmlType" length="100000000"/>
    <property name="violationSummary" type="string" length="256"/>

    <many-to-one embed-xml="false" name="challenge" class="sailpoint.object.CertificationChallenge" 
                 cascade="all" lazy="false"/>

    <property name="wakeUpDate" type="sailpoint.persistence.DateType" index="spt_cert_item_wk_up"/>
    <property name="remindersSent"/>

    <property name="needsContinuousFlush"/>

    <property name="phase" index="spt_cert_item_phase">
      <type name="sailpoint.persistence.EnumType">
        <param name="enumClassName">sailpoint.object.Certification$Phase</param>
      </type>
    </property>
    <property name="nextPhaseTransition" type="sailpoint.persistence.DateType" index="spt_cert_item_nxt_phs_tran" />

    <property name="finishedDate" type="sailpoint.persistence.DateType"/>

    <property name="recommendValue" type="string" length="100" />

    <bag name="classificationNames" cascade="all" table="CertItemClassifications">
      <key column="certification_item" />
      <element type="string" column="classification_name" />
    </bag>

    <property name="attributes" type="sailpoint.persistence.XmlType" length="100000000"/>

    <!--
      It is important that this is *below* the "attributes" property so that
      extended attributes can be lazily upgraded.
     -->
    &CertificationItemExtensions;

   </union-subclass>
</hibernate-mapping>
