<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" [
  <!ENTITY SailPointObject SYSTEM "classpath://sailpoint/object/SailPointObject.hbm.xml">
]>

<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<hibernate-mapping>
  <class name="sailpoint.object.AccountGroup">

    &SailPointObject;

    <!--
       Note that other classes use a name index, oracle requires
       that the index name be unique so we have to qualify it.
    -->
    <property name="name" type="string" length="128" index="spt_actgroup_name_csi"/>
    <property name="description" type="string" length="1024"/>

    <!-- not supporting different groups per instance yet...
    <property name="instance" type="string" length="128"/>
    -->

    <property name="nativeIdentity" type="string" length="322" index="spt_actgroup_native_ci"/>
    <property name="referenceAttribute" type="string" length="128" index="spt_actgroup_attr"/>
    <property name="memberAttribute" type="string" length="128"/>
    <property name="lastRefresh" type="sailpoint.persistence.DateType"/>
    <property name="lastTargetAggregation" type="sailpoint.persistence.DateType" index="spt_actgroup_lastAggregation"/>
    <property name="uncorrelated" type="boolean"/>

    <!-- jsl - this was originally marked indexed, but we don't need to 
         do that explicitly, the reference will generate a foreign key
         constraint which we automatically index in SailPointSchemaGenerator
    -->
    <many-to-one embed-xml="false" name="application" class="sailpoint.object.Application"/>

    <property name="attributes" type="sailpoint.persistence.XmlType" length="100000000"/>

    <!-- Originally stored these in an XML blob but in some of the POCs
         there can be extremely large numbers of permissions.  It is 
         therefore safest to put these in a table, which also gives us
         the advantage of being able to search for groups with a particular
         permission.
    <property name="permissions" type="sailpoint.persistence.XmlType"/>
     -->

    <list name="permissions" table="AccountGroupPerms">
      <key column="accountgroup"/>
      <list-index column="idx"/>
      <composite-element class="sailpoint.object.Permission">
        <property name="target"/>
        <property name="rights" length="4000"/>
        <property name="annotation"/>
      </composite-element>
    </list>

    <list name="targetPermissions" table="AccountGroupTargetPerms">
      <key column="accountgroup"/>
      <list-index column="idx"/>
      <composite-element class="sailpoint.object.Permission">
        <property name="target"/>
        <property name="rights" length="4000"/>
        <property name="annotation"/>
      </composite-element>
    </list>

    <list name="inheritance" table="accountGroupInheritance"
          cascade="persist,merge,save-update">
      <key column="accountGroup"/>
      <list-index column="idx"/>
      <many-to-many column="inheritsFrom" class="sailpoint.object.AccountGroup"/>
    </list>

    <property name="key1" type="string" length="128" index="spt_actgroup_key1_ci"/>
    <property name="key2" type="string" length="128" index="spt_actgroup_key2_ci"/>
    <property name="key3" type="string" length="128" index="spt_actgroup_key3_ci"/>
    <property name="key4" type="string" length="128" index="spt_actgroup_key4_ci"/>

  </class>
</hibernate-mapping>
