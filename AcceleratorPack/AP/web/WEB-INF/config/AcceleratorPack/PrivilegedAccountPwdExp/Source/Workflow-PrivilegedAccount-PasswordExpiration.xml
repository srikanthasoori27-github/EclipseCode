<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<!-- Copyright Â© 2018 SailPoint Technologies, Inc. All Rights Reserved.
All logos, text, content, and works of authorship, including but not limited to underlying code, programming or scripting language, designs, and/or graphics,
that are used and/or depicted herein are protected under United States and international copyright and trademark laws and treaties,
and may not be used or reproduced without the prior express written permission of SailPoint Technologies, Inc. -->
<Workflow created="" explicitTransitions="true" id="" modified="" name="Workflow-PSA-PasswordExpiration" type="IdentityEvent">
<Description>Accelerator Pack Password Expiration Workflow</Description>
  <Variable input="true" name="identityName"/>
  <Variable initializer="script:resolveDisplayName(identityName)" input="true" name="identityDisplayName"/>
  <Variable input="true" name="daysBeforePwdExpires"/>
  <Variable input="true" name="isExpired"/>
  <Variable input="true" name="accountName"/>
  <Variable input="true" name="appName"/>
  <Variable input="true" name="provisionAccount"/>
  <Variable input="true" name="plan"/>
  <Variable input="true" name="action"/>
  <Variable input="true" name="launcher"/>
  <Variable input="true" name="onlyNotify"/>
  <Variable initializer="false" name="trace" />
  <Variable name="flow" initializer="PasswordExpiration" />
  <Variable name="source" initializer="string:LCM" />
  <Variable name="spExtAttrs"/>
  <Variable name="foregroundProvisioning" initializer="string:true" />
  <Variable name="project" />
  <Variable name="provisioningErrors" />
  <Variable  name="requestType" initializer="PRIVILEGED SERVICE PASSWORD EXPIRATION FEATURE"/>
   <RuleLibraries>          
    <Reference class="sailpoint.object.Rule" name="Rule-Framework-NotificationRuleLibrary" />
  </RuleLibraries>
  <Description>Workflow to send notification to user for password expiration.</Description>
  <Step icon="Start" name="Start">
   <Transition to="Notify" when="script:isTrue(onlyNotify) &amp;&amp; plan == null || plan.getAccountRequests() == null || plan.getAccountRequests().size() &lt; 1"/>
    <Transition to="Process Plan" when="script:isTrue(provisionAccount) &amp;&amp; action!=null &amp;&amp; plan != null &amp;&amp; plan.getAccountRequests() != null"/>
    <Transition to="Stop"/>
  </Step>
  <Step action="call:sendEmail" icon="Email" name="Notify">
     <Arg name="template">
      <Script>
        <Source>
       	getWrapperEmailTemplateName(workflow, project, "PSAPasswordExpiration");
        </Source>
      </Script>
    </Arg> 
    <Arg name="daysBeforePwdExpires" value="ref:daysBeforePwdExpires"/>
    <Arg name="isExpired" value="ref:isExpired"/>
    <Arg name="accountName" value="ref:accountName"/>
    <Arg name="appName" value="ref:appName"/>
   	<Arg name="to">
		<Script>
			<Source>
			    if(project!=null)
			    {
				return getIdentityNameForNotification(workflow,identityName, project, false);
				}
				else
				{
				return identityName;
				}
	  		</Source>
		 </Script>
	</Arg>
	<Arg name="dynamicAppContent">
     	<Script>
		<Source>
			if(project!=null)
			{
				getDynamicTextEmailTemplate( project,"PSAPasswordExpiration", requestType);
			}
  		</Source>
	</Script>
	</Arg>
	<Arg name="approvalSet" value="ref:approvalSet"/>
	<Arg name="identityName" value="ref:identityName"/>
	<Arg name="identityDisplayName" value="ref:identityDisplayName"/>
	<Arg name="action" value="ref:action"/>
   	<Arg name="provisioningErrors" value="ref:provisioningErrors" />
    <Transition to="Stop"/>
  </Step>
    <Step icon="Task" name="Process Plan" posX="642" posY="10">
    <Arg name="flow" value="ref:flow"/>
    <Arg name="source" value="ref:source"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
    <Arg name="launcher" value="ref:launcher"/>
    <Arg name="plan" value="ref:plan"/>
    <Arg name="trace" value="ref:trace"/>
    <Arg name="requestType" value="ref:requestType" />
    <Arg name="foregroundProvisioning" value="ref:foregroundProvisioning" />
    <Return name="approvalSet" to="approvalSet"/>
    <Return name="project" to="project"/>
    <Return name="spExtAttrs" to="spExtAttrs"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="Workflow-FrameWork-Wrapper"/>      
    </WorkflowRef>
    <Transition to="Notify" when="approvalSet.hasApproved();" />
    <Transition to="Stop"/>
  </Step>
  <Step icon="Stop" name="Stop"/>
</Workflow>
