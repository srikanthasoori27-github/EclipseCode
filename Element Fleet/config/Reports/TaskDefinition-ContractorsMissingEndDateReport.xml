<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition executor="sailpoint.reporting.LiveReportExecutor" name="Contractors Missing End Date Report" progressMode="Percentage" resultAction="Rename" subType="Identity and User Reports" template="true" type="LiveReport">
    <Attributes>
        <Map>
            <entry key="report">
                <value>
                    <LiveReport title="User Account Attributes Report">
                        <DataSource objectType="sailpoint.object.Link" type="Filter">
                            <QueryParameters>
                                <Parameter argument="application" property="application.id"/>
                                <Parameter argument="accountType">
                                    <QueryScript>
                                        <Source><![CDATA[
							import sailpoint.reporting.*;
							import sailpoint.object.*;
							Filter f = Filter.ignoreCase(Filter.like("accountType", "Contractor", Filter.MatchMode.ANYWHERE));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "External", Filter.MatchMode.ANYWHERE)));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "Consultant", Filter.MatchMode.ANYWHERE)));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "Fixed Term", Filter.MatchMode.ANYWHERE)));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "Intern", Filter.MatchMode.ANYWHERE)));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "Leased", Filter.MatchMode.ANYWHERE)));
							f= Filter.or(f,Filter.ignoreCase(Filter.like("accountType", "Netrix User", Filter.MatchMode.ANYWHERE)));
							Filter f2 = Filter.eq("accountExpiration","never");
							queryOptions.addFilter(f);
							queryOptions.addFilter(f2);
								//queryOptions.addFilter(Filter.eq("identity.inactive", true));
							return queryOptions;
						]]></Source>
                                    </QueryScript>
                                </Parameter>
                            </QueryParameters>
                        </DataSource>
                        <ReportForm>
                            <Reference class="sailpoint.object.Form" name="ELE Application Account by Attribute Report Form"/>
                        </ReportForm>
                        <Columns>
                            <ReportColumnConfig field="application" header="rept_account_by_attr_col_application" property="application.name" sortable="true" width="110"/>
                            <ReportColumnConfig field="account" header="rept_account_by_attr_col_account" property="displayName" sortable="true" width="110"/>
                            <ReportColumnConfig field="identity" header="rept_account_by_attr_col_identity" property="identity.displayName" sortable="true" width="110"/>
                            <ReportColumnConfig field="identityStatus" header="Identity Status" property="identity.id" sortable="true" width="110">
								<RenderScript>
									<Source><![CDATA[
									  import sailpoint.object.Identity;
									  
									  Identity identity = context.getObjectById(Identity.class,value);
									  if(identity.isInactive()) return "InActive";
									  else return "Active";
									  
									]]></Source>
								</RenderScript>
							</ReportColumnConfig>
                            <ReportColumnConfig field="accountType" header="accountType" property="accountType" sortable="true" width="110"/>
                            <ReportColumnConfig field="accountExpiration" header="accountExpiration" property="accountExpiration" sortable="true" width="110"/>
                        </Columns>
                    </LiveReport>
                </value>
            </entry>
        </Map>
    </Attributes>
    <Description>Report for querying accounts on extended account attributes.</Description>
    <RequiredRights>
        <Reference class="sailpoint.object.SPRight" name="FullAccessApplicationUserReport"/>
    </RequiredRights>
    <Signature>
        <Inputs>
            <Argument name="application" type="Application"/>
        </Inputs>
    </Signature>
</TaskDefinition>