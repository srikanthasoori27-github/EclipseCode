<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Workflow explicitTransitions="true" libraries="Identity" name="PILMICO-Workflow-MainJoiner" type="IdentityLifecycle">
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="string:AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="string:LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="string:true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("sAMAccountName");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("domainID");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable initializer="true" input="true" name="doRefresh"/>
  <Variable input="true" name="email">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("email");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="businessUnitName">
    <Script>
      <Source>import sailpoint.object.Identity;

Identity identity = context.getObjectByName(Identity.class, identityName);

if( (identity.getAttribute("company") != null) ) {

	if (event.getNewObject().getAttribute("company") == null) {
	String businessUnitName = "";
	return businessUnitName;
	}
	else{
	return event.getNewObject().getAttribute("company");
	} 
}
else {
return null;
}</Source>
    </Script>
  </Variable>
  <Variable input="true" name="jobTitle">
    <Script>
      <Source>import sailpoint.object.Identity;

Identity identity = context.getObjectByName(Identity.class, identityName);

if( (identity.getAttribute("jobTitle") != null) ) {

	if (event.getNewObject().getAttribute("jobTitle") == null) {
	String jobTitle = "";
	return jobTitle;
	}
	else{
	return event.getNewObject().getAttribute("jobTitle");
	} 
}
else {
return null;
}</Source>
    </Script>
  </Variable>
  <Variable input="true" name="department">
    <Script>
      <Source>import sailpoint.object.Identity;

Identity identity = context.getObjectByName(Identity.class, identityName);

if( (identity.getAttribute("department") != null) ) {

	if (event.getNewObject().getAttribute("department") == null) {
	String department = "";
	return department;
	}
	else{
	return event.getNewObject().getAttribute("department");
	} 
}
else {
return null;
}</Source>
    </Script>
  </Variable>
  <Variable input="true" name="transition"/>
  <Variable input="true" name="identityRequestId"/>
  <Description>Enable birthright accounts when an employee joins the company.</Description>
  <Step icon="Start" name="Start" posX="28" posY="10">
    <Transition to="Call AD Workflow"/>
  </Step>
  <Step icon="Stop" name="end" posX="703" posY="7"/>
  <Step icon="Default" name="Call AD Workflow" posX="98" posY="10">
    <Arg name="identityName"/>
    <Arg name="sAMAccountName"/>
    <Arg name="fullName"/>
    <Arg name="project"/>
    <Arg name="trigger"/>
    <Arg name="source"/>
    <Arg name="userName"/>
    <Arg name="identityDisplayName"/>
    <Arg name="noTriggers"/>
    <Arg name="trace"/>
    <Arg name="password"/>
    <Arg name="doRefresh"/>
    <Arg name="event"/>
    <Arg name="pwd"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="email"/>
    <Return name="project" to="project"/>
    <Return name="identityRequestId" to="identityRequestId"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="PILMICO-Workflow-Joiner-AD"/>
    </WorkflowRef>
    <Transition to="Call GSuite Workflow"/>
  </Step>
  <Step icon="Default" name="Call GSuite Workflow" posX="256" posY="10" resultVariable="identityRequestId">
    <Arg name="identityName"/>
    <Arg name="sAMAccountName"/>
    <Arg name="project"/>
    <Arg name="fullName"/>
    <Arg name="identityRequestId" value="ref:identityRequestId"/>
    <Arg name="trigger"/>
    <Arg name="source"/>
    <Arg name="userName"/>
    <Arg name="identityDisplayName"/>
    <Arg name="noTriggers"/>
    <Arg name="trace"/>
    <Arg name="password"/>
    <Arg name="doRefresh"/>
    <Arg name="event"/>
    <Arg name="pwd"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="email"/>
    <Return name="identityRequestId" to="identityRequestId"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="PILMICO-Workflow-Joiner-Gsuite"/>
    </WorkflowRef>
    <Transition to="Application Checker"/>
  </Step>
  <Step icon="Default" name="Call Salesforce" posX="628" posY="126">
    <Arg name="identityName"/>
    <Arg name="sAMAccountName"/>
    <Arg name="fullName"/>
    <Arg name="project"/>
    <Arg name="identityRequestId"/>
    <Arg name="trigger"/>
    <Arg name="source"/>
    <Arg name="userName"/>
    <Arg name="identityDisplayName"/>
    <Arg name="noTriggers"/>
    <Arg name="trace"/>
    <Arg name="password"/>
    <Arg name="doRefresh"/>
    <Arg name="event"/>
    <Arg name="pwd"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="email"/>
    <Return name="project" to="project"/>
    <Return name="identityRequestId" to="identityRequestId"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="PILMICO-Workflow-Joiner-Salesforce"/>
    </WorkflowRef>
    <Transition to="end"/>
  </Step>
  <Step action="rule:PILMICO-Rule-JoinerTransition" icon="Default" name="Application Checker" posX="446" posY="10" resultVariable="transition">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="identityRequestId" value="ref:identityRequestId"/>
    <Return name="identityRequestId" to="identityRequestId"/>
    <Transition to="end">
      <Script>
        <Source>import sailpoint.object.IdentityRequest;
import sailpoint.object.IdentityRequestItem;
import sailpoint.object.TaskResult;
import sailpoint.object.WorkItem;
import sailpoint.object.WorkItem.State;
import sailpoint.object.*;
import sailpoint.workflow.*;
import java.util.*;
import sailpoint.object.WorkflowSummary.ApprovalSummary;

String state = "";

IdentityRequest ireq = context.getObjectByName(IdentityRequest.class, identityRequestId);

List aSummaries = ireq.getApprovalSummaries();

for(WorkflowSummary.ApprovalSummary as : aSummaries){
 state = as.getState().toString();
}


( ((state.equalsIgnoreCase("Expired") || state.equalsIgnoreCase("Rejected") || state.equalsIgnoreCase("Canceled")) &amp;&amp; (transition.equalsIgnoreCase("Stop")))
|| (state.equalsIgnoreCase("Finished") &amp;&amp; transition.equalsIgnoreCase("Stop")) );</Source>
      </Script>
    </Transition>
    <Transition to="Call Salesforce">
      <Script>
        <Source>import sailpoint.object.IdentityRequest;
import sailpoint.object.IdentityRequestItem;
import sailpoint.object.TaskResult;
import sailpoint.object.WorkItem;
import sailpoint.object.WorkItem.State;
import sailpoint.object.*;
import sailpoint.workflow.*;
import java.util.*;
import sailpoint.object.WorkflowSummary.ApprovalSummary;

String state = "";

IdentityRequest ireq = context.getObjectByName(IdentityRequest.class, identityRequestId);

List aSummaries = ireq.getApprovalSummaries();

for(WorkflowSummary.ApprovalSummary as : aSummaries){
 state = as.getState().toString();
}


state.equalsIgnoreCase("Finished") &amp;&amp; transition.equalsIgnoreCase("Proceed");
</Source>
      </Script>
    </Transition>
  </Step>
</Workflow>