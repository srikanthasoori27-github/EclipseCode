<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Workflow explicitTransitions="true" libraries="Identity" name="PILMICO-Workflow-Joiner-AD" type="IdentityLifecycle">
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="string:AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="string:LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="string:true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("sAMAccountName");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("domainID");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable initializer="true" input="true" name="doRefresh"/>
  <Variable input="true" name="email">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("email");</Source>
    </Script>
  </Variable>
  <Description>Enable birthright accounts when an employee joins the company.</Description>
  <Step icon="Start" name="Start" posX="194" posY="126">
    <Transition to="Password"/>
  </Step>
  <Step icon="Message" name="Create Birthright Plan" posX="484" posY="126" resultVariable="plan">
    <Arg name="password" value="ref:password"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="userName" value="ref:userName"/>
    <Arg name="pwd" value="ref:pwd"/>
    <Description>Process the user that joined and create plan for the user. Only create AD account for new "employees".</Description>
    <Script>
      <Source>// Creating Birthright Provisioning Plan
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
import sailpoint.object.Identity;          
import java.util.List;
import java.util.ArrayList;                        

ProvisioningPlan plan = new ProvisioningPlan();

Identity identityObject = context.getObjectByName(Identity.class, identityName);

List accreqs = new ArrayList();

// Set account request for AD
AccountRequest acctReq = new AccountRequest();
acctReq.setOperation(AccountRequest.Operation.Create);
acctReq.setApplication("AEV Active Directory");

accreqs.add(acctReq);

plan.setAccountRequests(accreqs);

plan.setIdentity(identityObject);
context.decache(identityObject);
return plan;</Source>
    </Script>
    <Transition to="Provision"/>
  </Step>
  <Step icon="Stop" name="end" posX="1052" posY="126"/>
  <Step action="rule:PILMICO-Rule-SendEmailJoinerAD" icon="Email" name="SendEmail" posX="950" posY="126">
    <Arg name="template" value="AEV-EmailTemplate-CreateAccountAD"/>
    <Arg name="to" value="rey.pejero@abotiz.com"/>
    <Arg name="userName" value="ref:userName"/>
    <Arg name="pwd" value="ref:pwd"/>
    <Description>Send an email to Manager containing the credentials of new employee</Description>
    <Transition to="end"/>
  </Step>
  <Step icon="Default" name="Provision" posX="690" posY="126">
    <Arg name="identityEmailTemplate"/>
    <Arg name="enableRetryRequest"/>
    <Arg name="securityOfficerElectronicSignature"/>
    <Arg name="fallbackApprover"/>
    <Arg name="endOnManualWorkItems"/>
    <Arg name="userEmailTemplate"/>
    <Arg name="policiesToCheck"/>
    <Arg name="project"/>
    <Arg name="workItemComments"/>
    <Arg name="identityRequestId"/>
    <Arg name="approvalSplitPoint"/>
    <Arg name="source"/>
    <Arg name="identityDisplayName"/>
    <Arg name="foregroundProvisioning"/>
    <Arg name="ownerElectronicSignature"/>
    <Arg name="batchRequestItemId"/>
    <Arg name="splitPlans"/>
    <Arg name="doRefresh"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="identityElectronicSignature"/>
    <Arg name="identityName"/>
    <Arg name="approvalSet"/>
    <Arg name="violationReviewDecision"/>
    <Arg name="filterRejects"/>
    <Arg name="splitProjects"/>
    <Arg name="noTriggers" value="ref:noTriggers"/>
    <Arg name="requesterEmailTemplate"/>
    <Arg name="approvalEmailTemplate"/>
    <Arg name="ticketManagementApplication"/>
    <Arg name="securityOfficerName"/>
    <Arg name="approvingIdentities"/>
    <Arg name="managerEmailTemplate"/>
    <Arg name="ticketId"/>
    <Arg name="approvalScheme"/>
    <Arg name="allowRequestsWithViolations"/>
    <Arg name="workItemPriority"/>
    <Arg name="managerElectronicSignature"/>
    <Arg name="requireViolationReviewComments"/>
    <Arg name="splitApprovalSet"/>
    <Arg name="approvalMode"/>
    <Arg name="trace"/>
    <Arg name="endOnProvisioningForms"/>
    <Arg name="splitWorkItemComments"/>
    <Arg name="notificationScheme"/>
    <Arg name="policyViolations"/>
    <Arg name="policyScheme"/>
    <Arg name="setPreviousApprovalDecisions"/>
    <Arg name="optimisticProvisioning"/>
    <Arg name="securityOfficerEmailTemplate"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="ABOITIZ-Workflow-LCM Provisioning-NoApproval"/>
    </WorkflowRef>
    <Transition to="Refresh Identity"/>
  </Step>
  <Step icon="Default" name="Password" posX="264" posY="126" resultVariable="pwd">
    <Script>
      <Source>import sailpoint.api.PasswordGenerator;
import sailpoint.object.PasswordPolicy;

PasswordPolicy policy = context.getObjectByName(PasswordPolicy.class,"AD Password Policy");
String password = "";

if(policy != null){
	PasswordGenerator psswdGen = new PasswordGenerator(context);
	password = psswdGen.generatePassword(policy);

return password;
}</Source>
    </Script>
    <Transition to="Set Password"/>
  </Step>
  <Step icon="Default" name="Set Password" posX="358" posY="126">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="pwd" value="ref:pwd"/>
    <Script>
      <Source>import sailpoint.api.PasswordGenerator;
import sailpoint.object.PasswordPolicy;
import sailpoint.object.Identity; 

Identity identity = context.getObjectByName(Identity.class, identityName);

       identity.setPassword(pwd);

context.saveObject(identity);  
context.commitTransaction();
context.decache(identity);
</Source>
    </Script>
    <Transition to="Create Birthright Plan"/>
  </Step>
  <Step action="refreshIdentity" icon="Default" name="Refresh Identity" posX="792" posY="126">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="promoteAttributes" value="true"/>
    <Arg name="correlateEntitlements" value="true"/>
    <Arg name="synchronizeAttributes" value="true"/>
    <Transition to="SendEmail"/>
  </Step>
</Workflow>