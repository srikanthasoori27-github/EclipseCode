<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Workflow explicitTransitions="true" libraries="Identity" name="PILMICO-Workflow-Joiner-Salesforce" type="IdentityLifecycle">
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="string:AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="string:LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="string:true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("sAMAccountName");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("domainID");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable initializer="true" input="true" name="doRefresh"/>
  <Variable input="true" name="email">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("email");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="identityRequestId"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("sAMAccountName");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("fullName");</Source>
    </Script>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable input="true" name="pwd"/>
  <Variable name="sAMAccountName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("domainID");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable input="true" name="trigger">
    <Description>The IdentityTrigger</Description>
  </Variable>
  <Variable input="true" name="event">
    <Description>The IdentityChangeEvent</Description>
  </Variable>
  <Variable input="true" name="identityName">
    <Description>The name of the identity.</Description>
  </Variable>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName">
    <Description>The displayName of the identity being updated.  
       Query for this using a projection query and fall back to the name.</Description>
  </Variable>
  <Variable initializer="AccountsRequest" input="true" name="flow">
    <Description>What type of LCM flow is this</Description>
  </Variable>
  <Variable name="plan">
    <Description>The provisioning plan which is built during the workflow.</Description>
  </Variable>
  <Variable initializer="LCM" input="true" name="source">
    <Description>String version of sailpoint.object.Source to indicate  
       where the request originated.  Defaults to LCM.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="trace">
    <Description>Used for debugging this workflow and when set to true trace  
       will be sent to stdout.</Description>
  </Variable>
  <Variable name="project">
    <Description>ProvisioningProject which is just a compiled version of the ProvisioningPlan.</Description>
  </Variable>
  <Variable initializer="true" input="true" name="noTriggers"/>
  <Variable input="true" name="pwd"/>
  <Variable name="userName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("employeeId");</Source>
    </Script>
  </Variable>
  <Variable name="password"/>
  <Variable name="fullName">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("displayName");</Source>
    </Script>
  </Variable>
  <Variable initializer="true" input="true" name="doRefresh"/>
  <Variable input="true" name="email">
    <Script>
      <Source>Identity identityObject =context.getObjectByName(Identity.class, identityName);
identityObject.getAttribute("email");</Source>
    </Script>
  </Variable>
  <Variable input="true" name="identityRequestId"/>
  <Description>Enable birthright accounts when an employee joins the company.</Description>
  <Step icon="Start" name="Start" posX="28" posY="10">
    <Transition to="Create Birthright Plan"/>
  </Step>
  <Step icon="Message" name="Create Birthright Plan" posX="98" posY="10" resultVariable="plan">
    <Arg name="password" value="ref:password"/>
    <Arg name="userName" value="ref:userName"/>
    <Arg name="pwd" value="ref:pwd"/>
    <Description>Process the user that joined and create plan for the user. Only create AD account for new "employees".</Description>
    <Script>
      <Source>// Creating Birthright Provisioning Plan
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
import sailpoint.object.Identity;          
import java.util.List;
import java.util.ArrayList;                        

ProvisioningPlan plan = new ProvisioningPlan();

Identity identityObject = context.getObjectByName(Identity.class, identityName);

List accreqs = new ArrayList();

// Set account request for Salesforce
AccountRequest acctReq = new AccountRequest();
acctReq.setOperation(AccountRequest.Operation.Create);
acctReq.setApplication("Salesforce");

accreqs.add(acctReq);

plan.setAccountRequests(accreqs);

plan.setIdentity(identityObject);

return plan;</Source>
    </Script>
    <Transition to="Provision"/>
  </Step>
  <Step icon="Stop" name="end" posX="757" posY="5"/>
  <Step action="rule:PILMICO-Rule-SendEmailJoiner" icon="Email" name="SendEmail" posX="604" posY="7">
    <Arg name="template" value="PILMICO-EmailTemplate-JoinerFinished"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="fullName" value="ref:fullName"/>
    <Arg name="userName" value="ref:userName"/>
    <Arg name="pwd" value="ref:pwd"/>
    <Description>Send an email to Manager containing the credentials of new employee</Description>
    <Transition to="end"/>
  </Step>
  <Step icon="Default" name="Provision" posX="303" posY="10" resultVariable="identityRequestId">
    <Arg name="identityEmailTemplate"/>
    <Arg name="enableRetryRequest"/>
    <Arg name="securityOfficerElectronicSignature"/>
    <Arg name="fallbackApprover"/>
    <Arg name="endOnManualWorkItems"/>
    <Arg name="userEmailTemplate"/>
    <Arg name="policiesToCheck"/>
    <Arg name="workItemComments"/>
    <Arg name="project"/>
    <Arg name="approvalSplitPoint"/>
    <Arg name="identityRequestId"/>
    <Arg name="source"/>
    <Arg name="identityDisplayName"/>
    <Arg name="foregroundProvisioning"/>
    <Arg name="ownerElectronicSignature"/>
    <Arg name="batchRequestItemId"/>
    <Arg name="splitPlans"/>
    <Arg name="doRefresh"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="identityElectronicSignature"/>
    <Arg name="identityName"/>
    <Arg name="approvalSet"/>
    <Arg name="violationReviewDecision"/>
    <Arg name="filterRejects"/>
    <Arg name="splitProjects"/>
    <Arg name="noTriggers" value="ref:noTriggers"/>
    <Arg name="workItemMaxReminders"/>
    <Arg name="requesterEmailTemplate"/>
    <Arg name="approvalEmailTemplate"/>
    <Arg name="ticketManagementApplication"/>
    <Arg name="securityOfficerName"/>
    <Arg name="approvingIdentities"/>
    <Arg name="workItemHoursTillEscalation"/>
    <Arg name="managerEmailTemplate"/>
    <Arg name="ticketId"/>
    <Arg name="approvalScheme"/>
    <Arg name="allowRequestsWithViolations"/>
    <Arg name="workItemHoursBetweenReminders"/>
    <Arg name="workItemPriority"/>
    <Arg name="managerElectronicSignature"/>
    <Arg name="requireViolationReviewComments"/>
    <Arg name="splitApprovalSet"/>
    <Arg name="approvalMode"/>
    <Arg name="trace"/>
    <Arg name="endOnProvisioningForms"/>
    <Arg name="splitWorkItemComments"/>
    <Arg name="notificationScheme"/>
    <Arg name="policyViolations"/>
    <Arg name="policyScheme"/>
    <Arg name="workItemReminderTemplate"/>
    <Arg name="setPreviousApprovalDecisions"/>
    <Arg name="workItemHoursTillExpiration"/>
    <Arg name="optimisticProvisioning"/>
    <Arg name="securityOfficerEmailTemplate"/>
    <Return name="project" to="project"/>
    <Return name="identityRequestId" to="identityRequestId"/>
    <Return name="email" to="email"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="PILMICO-Workflow-LCM Provisioning-Salesforce"/>
    </WorkflowRef>
    <Transition to="Refresh Identity">
      <Script>
        <Source>import sailpoint.object.IdentityRequest;
import sailpoint.object.IdentityRequestItem;
import sailpoint.object.TaskResult;
import sailpoint.object.WorkItem;
import sailpoint.object.WorkItem.State;
import sailpoint.object.*;
import sailpoint.workflow.*;
import java.util.*;
import sailpoint.object.WorkflowSummary.ApprovalSummary;

String state = "";

IdentityRequest ireq = context.getObjectByName(IdentityRequest.class, identityRequestId);

List aSummaries = ireq.getApprovalSummaries();

for(WorkflowSummary.ApprovalSummary as : aSummaries){
   state = as.getState().toString();
}

state.equalsIgnoreCase("Finished");</Source>
      </Script>
    </Transition>
    <Transition to="Send Email Expired">
      <Script>
        <Source>import sailpoint.object.IdentityRequest;
import sailpoint.object.IdentityRequestItem;
import sailpoint.object.TaskResult;
import sailpoint.object.WorkItem;
import sailpoint.object.WorkItem.State;
import sailpoint.object.*;
import sailpoint.workflow.*;
import java.util.*;
import sailpoint.object.WorkflowSummary.ApprovalSummary;

String state = "";

IdentityRequest ireq = context.getObjectByName(IdentityRequest.class, identityRequestId);

List aSummaries = ireq.getApprovalSummaries();

for(WorkflowSummary.ApprovalSummary as : aSummaries){
  state = as.getState().toString();
}

(state.equalsIgnoreCase("Expired") || state.equalsIgnoreCase("Rejected") || state.equalsIgnoreCase("Canceled"));</Source>
      </Script>
    </Transition>
  </Step>
  <Step action="refreshIdentity" icon="Default" name="Refresh Identity" posX="468" posY="7">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="provision" value="true"/>
    <Arg name="promoteAttributes" value="true"/>
    <Arg name="correlateEntitlements" value="true"/>
    <Arg name="synchronizeAttributes" value="true"/>
    <Transition to="SendEmail"/>
  </Step>
  <Step action="rule:PILMICO-Rule-SendEmailJoinerExpired" configForm="Provisioning Notification Step Form" icon="Email" name="Send Email Expired" posX="429" posY="162">
    <Arg name="requesterEmail" value="script:getEmail(launcher)"/>
    <Arg name="otherUsersToNotifyEmailTemplate"/>
    <Arg name="notificationScheme"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="userEmailTemplate"/>
    <Arg name="fullName" value="ref:fullName"/>
    <Arg name="source" value="ref:source"/>
    <Arg name="managerEmail" value="script:getManagersEmail(identityName, plan)"/>
    <Arg name="otherUsersToNotify"/>
    <Arg name="trace" value="ref:trace"/>
    <Arg name="requesterEmailTemplate"/>
    <Arg name="userEmail" value="script:getUserEmail(identityName, plan)"/>
    <Arg name="securityOfficerName"/>
    <Arg name="securityOfficerEmailTemplate"/>
    <Arg name="plan" value="ref:plan"/>
    <Arg name="managerEmailTemplate"/>
    <Arg name="flow" value="ref:flow"/>
    <Arg name="launcher" value="ref:launcher"/>
    <Description>
      	  Notify the various actors specified on notification scheme.
        </Description>
    <Transition to="end"/>
  </Step>
</Workflow>