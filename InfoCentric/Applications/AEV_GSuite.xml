<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Application PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Application connector="sailpoint.connector.OpenConnectorAdapter" featuresString="ADDITIONAL_ACCOUNT_REQUEST, PROVISIONING, SYNC_PROVISIONING, PASSWORD, ENABLE, SEARCH, ACCOUNT_ONLY_REQUEST" icon="internetIcon" name="AEV G Suite" profileClass="" type="G Suite">
  <AccountCorrelationConfig>
    <Reference class="sailpoint.object.CorrelationConfig" name="AEV GSuite Correlation"/>
  </AccountCorrelationConfig>
  <Attributes>
    <Map>
      <entry key="accountDeltaTimeStamp" value="2021-02-03T18:14:06.410Z"/>
      <entry key="acctAggregationEnd">
        <value>
          <Date>1612377681076</Date>
        </value>
      </entry>
      <entry key="acctAggregationStart">
        <value>
          <Date>1612377126180</Date>
        </value>
      </entry>
      <entry key="afterProvisioningRule"/>
      <entry key="beforeProvisioningRule" value="AEV-Rule-BeforeProvisioning"/>
      <entry key="clientID" value="1043147639103-gej544eaq3v73gff2hpums9h4lbnc80t.apps.googleusercontent.com"/>
      <entry key="clientSecret" value="2:ACP:H8j5URTLP0SO9FFtfQiczMhQapNCZEna72MpV38v8resT0IZ4VQYCRoLWexvpV+r"/>
      <entry key="compositeDefinition"/>
      <entry key="connectorClass" value="openconnector.connector.GoogleAppsDirect"/>
      <entry key="encrypted" value="refreshToken,clientSecret"/>
      <entry key="groupDeltaTimeStamp" value="2021-02-03T18:41:28.801Z"/>
      <entry key="groupDetails" value="Y"/>
      <entry key="isSkipAlias" value="true"/>
      <entry key="nativeChangeDetectionAttributeScope" value="entitlements"/>
      <entry key="nativeChangeDetectionAttributes"/>
      <entry key="nativeChangeDetectionEnabled">
        <value>
          <Boolean/>
        </value>
      </entry>
      <entry key="nativeChangeDetectionOperations"/>
      <entry key="pageSize" value="100"/>
      <entry key="partitionEmail"/>
      <entry key="partitionFamilyName"/>
      <entry key="partitionGivenName"/>
      <entry key="partitionMode">
        <value>
          <Boolean/>
        </value>
      </entry>
      <entry key="refreshToken" value="2:ACP:3sS5NwNTXqXksdtD+c+cn7uOpJmmFkRO+dTzHEINRPDpXe7tRJ5bhTZkz5A/O9du/sQy6Gh55GhZ&#10;huxH/BqhpjJjPOvbTq6iQ3/pua3l7IiePLtMvFe+Zy8BqDWQNOtUDdwio13L/GJOFbpUGIkvaBRs&#10;T7J/cErTxadGPmzydC4="/>
      <entry key="sysDescriptions">
        <value>
          <Map>
            <entry key="en_US"/>
          </Map>
        </value>
      </entry>
      <entry key="templateApplication" value="G Suite"/>
    </Map>
  </Attributes>
  <CustomizationRule>
    <Reference class="sailpoint.object.Rule" name="AEV-Rule-Customization-Gsuite"/>
  </CustomizationRule>
  <Owner>
    <Reference class="sailpoint.object.Identity" name="S110692"/>
  </Owner>
  <ProvisioningForms>
    <Form name="Create Account" objectType="account" type="Create">
      <Attributes>
        <Map>
          <entry key="pageTitle" value="Create Account"/>
        </Map>
      </Attributes>
      <Section>
        <Field displayName="con_form_GAR_last_name" helpKey="help_con_form_GAR_family_name" name="familyName" required="true" type="string">
          <Script>
            <Source>String lastname = identity.getLastname();
return lastname;</Source>
          </Script>
        </Field>
        <Field displayName="con_form_GAR_first_name" helpKey="help_con_form_GAR_given_name" name="givenName" required="true" type="string">
          <Script>
            <Source>String firstname = identity.getFirstname();
return firstname;</Source>
          </Script>
        </Field>
        <Field displayName="con_form_GAR_primary_email" helpKey="help_con_form_GAR_primary_user_email" name="primaryEmail" required="true" type="string">
          <Script>
            <Source>import java.util.*;  
import java.lang.*;  
import sailpoint.object.QueryOptions;
import sailpoint.object.Filter;
import sailpoint.object.Identity;
import java.util.Iterator;
import java.util.ArrayList;
                           
String source = identity.getAttribute("source");
String uniqueId = identity.getAttribute("name");
String emailOut = uniqueId + "@aboitiz.com";


if (source.equalsIgnoreCase("Outsource")) {
return emailOut;
}

  public static String queryFilter(String checkEmail){
			
   Filter filter = Filter.and(Filter.like("email", checkEmail , Filter.MatchMode.START), Filter.or(Filter.eq("source", "SuccessFactors") , Filter.eq("source", "Ramco")));
	QueryOptions qo = new QueryOptions();
	qo.addFilter(filter);
	Iterator it = context.search(Identity.class, qo);
	int counterDn = 0; 
	String counterDnString = "";
	
	while ((it != null) &amp;&amp; (it.hasNext())) {
		Identity id = it.next();
		counterDn++;
		context.decache(id);
	}
	counterDnString = counterDn.toString();
	return counterDnString;
	}	
	
//Identity identity = context.getObjectByName(Identity.class, identityName);

   String firstname = identity.getFirstname().replaceAll("\\s",".").toLowerCase();
   String middlename = identity.getAttribute("middleName");
   String lastname = identity.getLastname().replaceAll("\\s",".").toLowerCase();
   
if (middlename == null || middlename == void) {
middlename = "";	
} else {
middlename = identity.getAttribute("middleName").replaceAll("\\s",".").toLowerCase();
}

	String fullName = firstname + " " + lastname;
  
  String checkEmail = firstname + "." + lastname + "@aboitiz.com";


	int counterMiddleName = 0;
	String middleNameBuild = "";
	String counterDnN = "";
	int counterDnName = 0;
	
	counterDnN = queryFilter(checkEmail);
	counterDnName = Integer.parseInt(counterDnN);  
		
	if (counterDnName == 0 ){
	return checkEmail;
	} else {
	if (middlename != null) {	
	
	for (int i = 0; i &lt; (middlename.length()); i ++){
		counterMiddleName ++;
		middleNameBuild += middlename.charAt(counterMiddleName - 1);
		checkEmail = firstname + "." + middleNameBuild + "." + lastname + "@aboitiz.com";
		
		//Quering using queryFilter function
		counterDnN = queryFilter(checkEmail);
		counterDnName = Integer.parseInt(counterDnN); 
		
		if (counterDnName == 0 ){
		return checkEmail;
		} 
	}

   // Quering using queryFilter function
	counterDnN = queryFilter(checkEmail);
	counterDnName = Integer.parseInt(counterDnN); 
    
	i = 1;
	while ( i &lt;= 50) {
		checkEmail = firstname + "." +  middlename  + "." + lastname + i.toString() + "@aboitiz.com";
		i++;
		
		//Quering using queryFilter function
		counterDnN = queryFilter(checkEmail);
		counterDnName = Integer.parseInt(counterDnN); 
		
	if (counterDnName == 0 ){
		return checkEmail;	
	}
		
	}
} 
else {
	i = 1;
	while ( i &lt;= 50) {
		checkEmail = firstname  + " " + lastname + i.toString() + "@aboitiz.com";
		i++;
		
		//Quering using queryFilter function
		counterDnN = queryFilter(checkEmail);
		counterDnName = Integer.parseInt(counterDnN); 
		
	if (counterDnName == 0 ){
		return checkEmail;	
	}
		
	}
	}
}
</Source>
          </Script>
        </Field>
        <Field displayName="con_form_GAR_password" helpKey="help_con_form_GAR_password_user" name="password" required="true" type="string">
          <Script>
            <Source>import java.util.*;
import sailpoint.object.Identity;
import sailpoint.api.PasswordGenerator;
import sailpoint.object.PasswordPolicy;


String pwd = context.decrypt(identity.getPassword());
String startDate = identity.getAttribute("serviceDate");
String source = identity.getAttribute("source");
              

PasswordPolicy policy = context.getObjectByName(PasswordPolicy.class,"AD Password Policy");
String password = "";

if(policy != null){
	PasswordGenerator psswdGen = new PasswordGenerator(context);
	password = psswdGen.generatePassword(policy);
}

if (!source.equalsIgnoreCase("Outsource")) {
return pwd;
}
else {
identity.setPassword(password);
context.saveObject(identity);  
context.commitTransaction();

return password;
            
} </Source>
          </Script>
        </Field>
        <Field displayName="Organization Unit" name="organizationUnit" type="string">
          <RuleRef>
            <Reference class="sailpoint.object.Rule" name="AEV-Rule-ProvPolicyGsuiteOU"/>
          </RuleRef>
        </Field>
        <Field displayName="External ID" name="externalIds" type="string">
          <Script>
            <Source>return "{\"value\":\"" + identity.getAttribute("employeeId") + "\"," + "\"type\":\"organization\"" + ",\"customType\":\"Employee ID\"}";
</Source>
          </Script>
        </Field>
        <Field displayName="Department" name="department" type="string">
          <Script>
            <Source>String dept = identity.getAttribute("department");
return dept;</Source>
          </Script>
        </Field>
        <Field displayName="Job Title" name="organizationTitle" type="string">
          <Script>
            <Source>String jobTitle = identity.getAttribute("jobTitle");
return jobTitle;</Source>
          </Script>
        </Field>
        <Field displayName="Team Leader" name="relations" type="string">
          <Script>
            <Source>if (identity.getManager() != null) {
return "{\"value\":\"" + identity.getManager().getEmail() + "\"," +"\"type\":\"manager\"}";
}
else {
return null;
}</Source>
          </Script>
        </Field>
      </Section>
    </Form>
    <Form name="group" objectType="group" type="Create">
      <Attributes>
        <Map>
          <entry key="pageTitle" value="group"/>
        </Map>
      </Attributes>
      <Section>
        <Field displayName="con_form_GAR_group_email" helpKey="help_con_form_GAR_primary_group_email" name="Email" required="true" type="string"/>
        <Field displayName="con_form_GAR_group_name" helpKey="help_con_form_GAR_primary_group_name" name="name" type="string"/>
      </Section>
    </Form>
    <Form name="role" objectType="Role" type="Create">
      <Attributes>
        <Map>
          <entry key="pageTitle" value="role"/>
        </Map>
      </Attributes>
      <Section>
        <Field displayName="con_form_GAR_role_name" helpKey="help_con_form_GAR_role_name" name="roleName" required="true" type="string"/>
        <Field displayName="con_form_GAR_role_privileges" helpKey="help_con_form_GAR_role_privileges" multi="true" name="rolePrivileges" required="true" type="string"/>
        <Field displayName="con_form_GAR_role_discription" helpKey="help_con_form_GAR_role_description" name="roleDescription" type="string"/>
      </Section>
    </Form>
    <Form name="Update Account" objectType="account" type="Update">
      <Attributes>
        <Map>
          <entry key="pageTitle" value="Update Account"/>
        </Map>
      </Attributes>
      <Section name="Section 1">
        <Field displayName="Organization Unit" name="organizationUnit" type="string"/>
      </Section>
    </Form>
  </ProvisioningForms>
  <Schemas>
    <Schema displayAttribute="primaryEmail" identityAttribute="objectID" instanceAttribute="" nativeObjectType="account" objectType="account">
      <AttributeDefinition name="objectID" remediationModificationType="None" required="true" type="string">
        <Description>Unique ID of the user</Description>
      </AttributeDefinition>
      <AttributeDefinition name="primaryEmail" remediationModificationType="None" required="true" type="string">
        <Description>Primary E-mail ID of user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="name" remediationModificationType="None" required="true" type="string">
        <Description>Full name of the user in JSON format.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isAdmin" remediationModificationType="None" required="true" type="string">
        <Description>Is user an administrator.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isDelegatedAdmin" remediationModificationType="None" required="true" type="string">
        <Description>Is user a delegated administrator.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="lastLoginTime" remediationModificationType="None" required="true" type="string">
        <Description>Last login time of user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="suspended" remediationModificationType="None" required="true" type="string">
        <Description>Is user suspended.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="suspensionReason" remediationModificationType="None" required="true" type="string">
        <Description>Reason for suspension.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="changePasswordAtNextLogin" remediationModificationType="None" required="true" type="string">
        <Description>Indicates if the user is forced to change password at next login.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="ipWhitelisted" remediationModificationType="None" required="true" type="string">
        <Description>Indicate if user's IP address is white listed.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="ims" remediationModificationType="None" required="true" type="string">
        <Description>The user's Instant Messenger (IM) accounts.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="emails" remediationModificationType="None" required="true" type="string">
        <Description>A list of the user's E-mail addresses.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="externalIds" remediationModificationType="None" required="true" type="string">
        <Description>A list of external IDs for the user, such as an employee or network ID.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="relations" remediationModificationType="None" required="true" type="string">
        <Description>A list of the user's relationships to other users.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="addresses" remediationModificationType="None" required="true" type="string">
        <Description>A list of the user's addresses.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="organizations" remediationModificationType="None" required="true" type="string">
        <Description>List of organizations the user belongs to</Description>
      </AttributeDefinition>
      <AttributeDefinition name="phones" remediationModificationType="None" required="true" type="string">
        <Description>A list of the user's phone numbers.</Description>
      </AttributeDefinition>
      <AttributeDefinition multi="true" name="aliases" remediationModificationType="None" required="true" type="string">
        <Description>List of the user's alias E-mail addresses.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="nonEditableAliases" remediationModificationType="None" required="true" type="string">
        <Description>List of the user's non-editable alias E-mail addresses.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="customerId" remediationModificationType="None" required="true" type="string">
        <Description>The customer ID to retrieve all account users.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="orgUnitPath" remediationModificationType="None" required="true" type="string">
        <Description>The full path of the parent organization associated with the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isMailboxSetup" remediationModificationType="None" required="true" type="string">
        <Description>Indicates if the user's Google mailbox is created.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="includeInGlobalAddressList" remediationModificationType="None" required="true" type="string">
        <Description>Indicates if the user's profile is visible in Global Address List when the contact sharing feature is enabled for the domain.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="thumbnailPhotoUrl" remediationModificationType="None" required="true" type="string">
        <Description>Photo Url of the user</Description>
      </AttributeDefinition>
      <AttributeDefinition multi="true" name="contacts" remediationModificationType="None" required="true" type="string">
        <Description>Contacts</Description>
      </AttributeDefinition>
      <AttributeDefinition entitlement="true" managed="true" multi="true" name="Groups" remediationModificationType="None" schemaObjectType="group" type="string">
        <Description>Groups connected to the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition entitlement="true" managed="true" multi="true" name="Roles" remediationModificationType="None" schemaObjectType="Role" type="string">
        <Description>Roles assigned to the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="fullName" remediationModificationType="None" required="true" type="string">
        <Description>Full Name of the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="givenName" remediationModificationType="None" required="true" type="string">
        <Description>First Name of the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="familyName" remediationModificationType="None" required="true" type="string">
        <Description>Last Name of the user.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="dormant" type="string">
        <Description/>
      </AttributeDefinition>
      <AttributeDefinition name="employeeId" type="string">
        <Description/>
      </AttributeDefinition>
    </Schema>
    <Schema aggregationType="group" descriptionAttribute="roleDescription" displayAttribute="roleName" featuresString="PROVISIONING" identityAttribute="objectID" instanceAttribute="" nativeObjectType="role" objectType="Role">
      <AttributeDefinition name="objectID" remediationModificationType="None" required="true" type="string">
        <Description>roleId of role</Description>
      </AttributeDefinition>
      <AttributeDefinition name="roleName" remediationModificationType="None" required="true" type="string">
        <Description>Name of the role.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="roleDescription" remediationModificationType="None" required="true" type="string">
        <Description>Description of role</Description>
      </AttributeDefinition>
      <AttributeDefinition multi="true" name="rolePrivileges" remediationModificationType="None" required="true" type="string">
        <Description>Privileges of the role</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isSystemRole" remediationModificationType="None" required="true" type="string">
        <Description>isSystemRole</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isSuperAdminRole" remediationModificationType="None" required="true" type="string">
        <Description>isSuperAdminRole</Description>
      </AttributeDefinition>
    </Schema>
    <Schema descriptionAttribute="description" displayAttribute="name" featuresString="PROVISIONING" identityAttribute="objectID" instanceAttribute="" nativeObjectType="group" objectType="group">
      <AttributeDefinition name="name" remediationModificationType="None" required="true" type="string">
        <Description>Name of the group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="nonEditableAliases" remediationModificationType="None" required="true" type="string">
        <Description>List of the group's non-editable alias E-mail addresses that are outside of the account's primary domain or sub domains. These are functioning E-mail addresses used by the group. This is a read-only property.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="objectID" remediationModificationType="None" required="true" type="string">
        <Description>ID of group</Description>
      </AttributeDefinition>
      <AttributeDefinition name="description" remediationModificationType="None" required="true" type="string">
        <Description>Description of the group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="adminCreated" remediationModificationType="None" required="true" type="string">
        <Description>Whether it is created by administrator.</Description>
      </AttributeDefinition>
      <AttributeDefinition multi="true" name="aliases" remediationModificationType="None" required="true" type="string">
        <Description>Group aliases.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="email" remediationModificationType="None" required="true" type="string">
        <Description>Group E-mail address.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="directMembersCount" remediationModificationType="None" required="true" type="string">
        <Description>Number of group members.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="whoCanJoin" remediationModificationType="None" required="true" type="string">
        <Description>Permissions to join the group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="whoCanViewMembership" remediationModificationType="None" required="true" type="string">
        <Description>Permissions to view membership.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="whoCanViewGroup" remediationModificationType="None" required="true" type="string">
        <Description>Permissions to view group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="whoCanInvite" remediationModificationType="None" required="true" type="string">
        <Description>Permissions to invite members.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="allowExternalMembers" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if Google Apps users external to your account can view or become members of this group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="whoCanPostMessage" remediationModificationType="None" required="true" type="string">
        <Description>Permissions to post messages to the group.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="allowWebPosting" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if any member allowed to post to the group web forum.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="primaryLanguage" remediationModificationType="None" required="true" type="string">
        <Description>Language tag for a group's primary language.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="maxMessageBytes" remediationModificationType="None" required="true" type="string">
        <Description>The maximum size of a message.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="isArchived" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if the contents of the group to be archived.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="archiveOnly" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if the group to be only archived.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="messageModerationLevel" remediationModificationType="None" required="true" type="string">
        <Description>Moderation level for messages.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="spamModerationLevel" remediationModificationType="None" required="true" type="string">
        <Description>Moderation levels for messages detected as spam.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="replyTo" remediationModificationType="None" required="true" type="string">
        <Description>The default reply to a message is sent here.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="customReplyTo" remediationModificationType="None" required="true" type="string">
        <Description>An E-mail address used when replying to a message.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="sendMessageDenyNotification" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if the members are notified if his message is denied by owner.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="defaultMessageDenyNotificationText" remediationModificationType="None" required="true" type="string">
        <Description>Text sent to the message's author as part of rejection notification.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="showInGroupDirectory" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if group is listed in the Groups directory.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="allowGoogleCommunication" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean allowing Google to contact group administrators.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="membersCanPostAsTheGroup" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if members can post using the group E-mail address.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="messageDisplayFont" remediationModificationType="None" required="true" type="string">
        <Description>Default message's display font.</Description>
      </AttributeDefinition>
      <AttributeDefinition name="includeInGlobalAddressList" remediationModificationType="None" required="true" type="string">
        <Description>A Boolean indicating if group is included in the Global Address List</Description>
      </AttributeDefinition>
    </Schema>
  </Schemas>
  <ApplicationScorecard/>
</Application>